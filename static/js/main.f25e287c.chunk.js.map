{"version":3,"sources":["dev-cert/signed_software_statement.js","dev-cert/unsigned_software_statement.js","tree.js","config/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","redirect_uris","token_endpoint_auth_method","grant_types","response_types","client_name","client_uri","contacts","jwks","keys","bookmarks","_type","_rev","fields","farm","farms","grower","growers","trace","debug","error","getRedirectURIForCurrentLocation","a","cert","loc","href","replace","udevcert","oadacert","create","key","sign","private","devcert","index","_","findIndex","r","ru","url","parse","protocol","host","require","window","location","metadata","redirect","scope","config","configFunc","localStorage","con","App","props","domain","length","match","state","showlogin","showdropzone","showapproval","showcomplete","message","jobs","token","this","oada","getDomainToken","JSON","stringify","setState","get","path","then","data","root","Promise","reduce","acc","g","concurrency","f","geojson","remote","features","name","properties","field","boundary","geometry","gkey","find","k","id","fkey","rgkey","_id","rfkey","uuidv4","local","lt","each","l","push","type","listtype","console","log","map","j","cloneDeep","put","tree","resource","action","files","connect","cache","forEach","resolve","reject","reader","FileReader","onabort","onerror","onload","binaryStr","result","domparser","DOMParser","kml","parseFromString","togeojson","readAsText","fetchAllRemoteGFF","geoJSONToOADA","constructJobList","cfg","options","resetDomainCache","evt","target","value","approvals","filter","className","style","fontFamily","Helmet","pkg","version","backgroundColor","color","fontSize","padding","textAlign","display","flexDirection","alignItems","flexGrow","onClick","doLogout","textDecoration","margin","width","onChange","domainChanged","borderRadius","border","cursor","doLogin","onDrop","droppedFiles","getRootProps","getInputProps","flex","justifyContent","minHeight","putAllJobsToOADA","t","fontWeight","string","charAt","toUpperCase","slice","flexWrap","i","position","bottom","alt","src","React","Component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f25e287c.chunk.js","sourcesContent":["module.exports = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InluMjJ1akJVQ0VlbE5VUnJhOW9na2hlRDJLRVhvbGprc21BVnFGcTBMUGciLCJqd2siOnsia3R5IjoiUlNBIiwia2lkIjoieW4yMnVqQlVDRWVsTlVScmE5b2draGVEMktFWG9samtzbUFWcUZxMExQZyIsIm4iOiJycjM4aUs4RmkwXy1DUkxUdlZLNElJQ2xhcmlpNndWSHBFN3paUFhvRVJsX09vaDY0WW1iUWNSYTVlRncwVVFoVXZFQ2hLdTlObzNqbTdMVzlaY0wxSEtyaGtVVy1PUW9iT1hVbnJDZ29DcGE4VlloX3dSSWRRWWJzdlBRVmo1Tkd1dU5YYVpCX19weEZ5LW5fTzJJTVM4T0dyZXptM2JRSERBZi1qbmdJaFpHWmdMYXZMSnlTSFV5RFFMNEZiUTZEM1F6M0FNT3J4RnZhNEtCSVBDUUtGT21ZWFZuNHp0Z1Q2OGhneU1vYzFLeXR4b1JnelZIbkNkVHBQV1dWcm5NRmNKZWRZRC1MbWswWG81cmpZT3htcThBMWVqZnhQTWVSXzNWNzhBSmsyTERJNHZHYUozZm5hUFpTN0N2VzhGM3BXV2lqX0J5VkdDSS01QnJrcUhfblEiLCJlIjoiQVFBQiJ9fQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vZmllbGRzLWltcG9ydGVyL29hdXRoMi9yZWRpcmVjdC5odG1sIiwiaHR0cHM6Ly9vcGVuYXRrLmdpdGh1Yi5pby9maWVsZHMtaW1wb3J0ZXIvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwczovL2xvY2FsaG9zdDozMDAwL2ZpZWxkcy1pbXBvcnRlci9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9maWVsZHMtaW1wb3J0ZXIvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwczovL2xvY2FsaG9zdDo4MDAwL2ZpZWxkcy1pbXBvcnRlci9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9maWVsZHMtaW1wb3J0ZXIvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJhdXRob3JpemF0aW9uX2NvZGUiXSwicmVzcG9uc2VfdHlwZXMiOlsidG9rZW4iLCJjb2RlIiwiaWRfdG9rZW4iLCJpZF90b2tlbiB0b2tlbiIsImNvZGUgaWRfdG9rZW4iLCJjb2RlIHRva2VuIiwiY29kZSBpZF90b2tlbiB0b2tlbiJdLCJjbGllbnRfbmFtZSI6Ik9wZW5BVEsgRmllbGRzIEltcG9ydGVyIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vb3BlbmF0ay5jb20vZmllbGRzLWltcG9ydGVyIiwiY29udGFjdHMiOlsiQWFyb24gQXVsdCA8YXVsdGFjQHB1cmR1ZS5lZHU-Il0sImp3a3MiOnsia2V5cyI6W3sia3R5IjoiUlNBIiwia2lkIjoiZjdmODBkMGRkZTk5NGRjMGFlNzBlYWU1M2E1MzMxYjIiLCJlIjoiQVFBQiIsIm4iOiJ4eTV5YWRKZnpiS1FuYVJGcnJBbmVwWU56Z0VRemtXTE4yRUtSQThFSkplN2F5elFVMWxzOXgwckIxa0YxYWlkUGVSY3E3YVVMLVNIYjNFdlFyRHhaR1BDWElYYzVXWlBEUTRabmduR2JHdU90bHFHV2tIVFZIc1pRYTZjSkZ2U21qN3hCWHVCd1hNMFJ0SFNaSWN5V0ptY0xPWW15Umt4ay1QSFpCYXlMTzgzZ1RnMlBxZmMxVEdpRmN5bUotQk4wTWpjT2NlQ0MyRzB2aEhfWHI0dlktOTQzeHI2eS1meTdvMFQ2S1Y2dm1IaW45Y1R4clRja2U3Y2cwZ2tzNmZtYzhiLWdkdFFpWjBYOHEyMmN3YXJXZFVLV1pOekxSRmpNMzhXb0x3NFFhVlhZaFBJbTc2N3NyVlhGQ1F0MlQ5bnNuTy1UMXYzUUNqTzc4S2pPVFFjSHcifV19fQ.p6Df0h9q1WkY7ukWReYvV9YZ5p14jhijwVXlzs3hfiRP_KjkNF44CBnzJqwSD5yRATZrBLGCnnAtylL-OTDmTNua_f1S1VP0TrhWmoK2iLmJsGcJl7Bz8xtBCOarZOk1DsAllUi4iS-AJjj4wOrmGQRO5vrK3jukWFyTB4uKciIyJsdJIGtGxGKV-bpVm_6wdwaDXz-wB67srxqn3-wUEPx5yMTtKctcsMBhwXP6Q1v6_QfjTwnzoTz7PY7TNpkYmYwIPj15bVC9bQmpgbTD3s-VB6InpOuP3YZ5JUSPwlD66V2u7ZQvRXfJttKTUhSOhrh_TSpkQuLIZ-U_e4iydA\";","module.exports = {\n  redirect_uris: [\n          'https://openatk.com/fields-importer/oauth2/redirect.html', \n    'https://openatk.github.io/fields-importer/oauth2/redirect.html',\n  ],\n  token_endpoint_auth_method:\n    'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n  grant_types: ['authorization_code'],\n  response_types: [\n    'token',\n    'code',\n    'id_token',\n    'id_token token',\n    'code id_token',\n    'code token',\n    'code id_token token'\n  ],\n  client_name: 'OpenATK Fields Importer',\n  client_uri: 'https://openatk.com/fields-importer',\n  contacts: ['Aaron Ault <aultac@purdue.edu>'],\n  jwks: {\n    keys: [\n{\"kty\":\"RSA\",\"kid\":\"f7f80d0dde994dc0ae70eae53a5331b2\",\"e\":\"AQAB\",\"n\":\"xy5yadJfzbKQnaRFrrAnepYNzgEQzkWLN2EKRA8EJJe7ayzQU1ls9x0rB1kF1aidPeRcq7aUL-SHb3EvQrDxZGPCXIXc5WZPDQ4ZngnGbGuOtlqGWkHTVHsZQa6cJFvSmj7xBXuBwXM0RtHSZIcyWJmcLOYmyRkxk-PHZBayLO83gTg2Pqfc1TGiFcymJ-BN0MjcOceCC2G0vhH_Xr4vY-943xr6y-fy7o0T6KV6vmHin9cTxrTcke7cg0gks6fmc8b-gdtQiZ0X8q22cwarWdUKWZNzLRFjM38WoLw4QaVXYhPIm767srVXFCQt2T9nsnO-T1v3QCjO78KjOTQcHw\"}\n    ],\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0,\n          grower: {\n            _type: \"application/vnd.oada.fields.1+json\",\n          }\n        }\n      },\n      growers: {\n        \"*\": {\n          _type: 'application/vnd.oada.fields.1+json',\n          _rev: 0\n        }\n      }\n    },\n  }\n}\n\n\n","import debug from 'debug'\n\nconst trace = debug('fields-importer#config:trace');\nconst info = debug('fields-importer#config:info');\nconst error = debug('fields-importer#config:error');\n\nexport default async function() {\n  const oadacert = require('@oada/oada-certs');\n  const url = require('url');\n  const _ = require('lodash');\n  \n  let devcert = require('../dev-cert/signed_software_statement.js');\n  const udevcert = require('../dev-cert/unsigned_software_statement.js');\n \n  // Assumes window.location.href is the root of the website\n  const loc = url.parse(window.location.href);\n  \n  async function getRedirectURIForCurrentLocation(cert)  {\n    // If no cert was passed, just create a cert for this origin and return it\n    if (!cert) {\n      trace('No cert passed, must be in development mode.  Replacing dev-cert with one for this URL on the fly. loc = ', loc);\n      const href = loc.href.replace(/\\/$/,''); // get rid of trailing slash\n      udevcert.redirect_uris = [ href + '/oauth2/redirect.html' ];\n      trace('New redirect_uris = ', udevcert.redirect_uris);\n      const key = await oadacert.keys.create();\n      devcert = await oadacert.sign(udevcert, key.private);\n      return udevcert.redirect_uris[0];\n    }\n  \n    // Otherwise, look for the current origin+path in the cert that was passed and error if not there\n    const index = _.findIndex(udevcert.redirect_uris, r => {\n      const ru = url.parse(r);\n      // https://localhost:3000 === https://openatk.com/fields-importer\n      return (ru.protocol+'//'+ru.host) === (loc.protocol+'//'+loc.host);\n    });\n    if (index < 0) {\n      error('ERROR: could not find redirect_uri in developer certificate for this domain!');\n      return false;\n    }\n  \n    return udevcert.redirect_uris[index];\n  }\n  \n  \n  let metadata = false;\n  let redirect = false;\n  // If not in production, auto-generate a dev cert based on URL\n  if (process.env.NODE_ENV !== 'production') {\n    info('NODE_ENV = ', process.env.NODE_ENV);\n    redirect = await getRedirectURIForCurrentLocation(); // changes global devcert\n    metadata = devcert;\n  \n  // Otherwise, pick dev cert redirect_uri from the cert itself based on our current URL\n  } else {\n    redirect = await getRedirectURIForCurrentLocation(devcert);\n    metadata = devcert;\n  }\n  \n  return {\n    redirect, \n    metadata,\n    scope: 'oada.fields:all',\n  };\n}\n","import React from 'react';\n//import oadaid from '@oada/oada-id-client';\n//import devcert from './dev-cert/signed_software_statement.js';\n//import udevcert from './dev-cert/unsigned_software_statement.js';\nimport { Helmet } from 'react-helmet';\nimport pkg from '../package.json';\nimport debug from 'debug';\nimport './App.css';\n\nimport Promise from 'bluebird';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport oada from '@oada/oada-cache';\nimport Dropzone from 'react-dropzone';\nimport togeojson from '@mapbox/togeojson';\nimport tree from './tree';\nimport configFunc from './config'\n\nlet config = configFunc(); // This is a promise, you have to await it if you want to use it later\n\nconst trace = debug('fields-importer#app:trace');\nconst info = debug('fields-importer#app:trace');\nconst error = debug('fields-importer#app:trace');\n\nif (process.env.NODE_ENV !== 'production') {\n  info('NOT production, turning on all debugs');\n  localStorage.debug = \"*\";\n} else {\n  localStorage.debug = \"\"; // production turn off debugging\n}\n\nlet con = false;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let domain = localStorage['oada.domain'] || false;\n    if (domain === 'false' || (typeof domain === 'string' && domain.length < 1)) {\n      domain = false;\n    }\n    if (domain && !domain.match(/^http/)) domain = 'https://'+domain;\n\n    this.state = { \n      showlogin: true, // no token by default, show login, componentDidMount will correct if we have token\n      showdropzone: false, \n      showapproval: false,\n      showcomplete: false,\n      message: false,\n      jobs: [],\n      domain,\n      token: false,\n    };\n  }\n\n  async componentDidMount() {\n    // ask OADA if we have a token\n    let token = false;\n    if (this.state.domain) { \n      token = await oada.getDomainToken(this.state.domain); //localStorage['oada.token'] || false;\n\n      if (token === 'false' || (typeof token === 'string' && token.length < 1)) {\n        token = false;\n      }\n    }\n\n    trace('componentDidMount: Setting state, token = ', JSON.stringify(token));\n    this.setState({\n      showlogin: !token,\n      showdropzone: !!token,\n      token,\n    });\n\n  }\n\n  async fetchAllRemoteGFF() {\n    this.setState({ message: 'Fetching your current fields...'});\n    const root = await con.get({path: '/bookmarks/fields'}).then(r => r.data);\n    const { growers, farms, fields } = await Promise.props({\n      growers: Promise.reduce(_.keys(root.growers), async (acc,g) => { \n                 acc[g] = await con.get({ path: `/bookmarks/fields/growers/${g}` }).then(r=>r.data); \n                 return acc;\n               }, {}, { concurrency: 5 } ),\n        farms: Promise.reduce(_.keys(root.farms),   async (acc,f) => { \n                 acc[f] = await con.get({ path: `/bookmarks/fields/farms/${f}` }).then(r=>r.data); \n                 return acc \n               }, {}, { concurrency: 5 } ),\n       fields: Promise.reduce(_.keys(root.fields),  async (acc,f) => { \n                 acc[f] = await con.get({ path: `/bookmarks/fields/fields/${f}` }).then(r=>r.data); \n                 return acc \n               }, {}, { concurrency: 5 } ),\n    });\n    return { growers, farms, fields };\n  }\n\n\n  // Expects a feature array (i.e. geojson.features is an array), and expects\n  // each item to have propterties with Grower - Name, Farm - Name, Field - Name\n  // from SST export\n  geoJSONToOADA({geojson, remote}) {\n    const { growers, farms, fields } = _.reduce(geojson.features, (acc,f) => {\n      // Extract names from the KML:\n      const grower = { name: f.properties['Grower - Name'] };\n      const farm = { name: f.properties['Farm - Name'] };\n      const field = { name: f.properties['Field - Name'], boundary: f.geometry };\n  \n      // Figure out if we've seen this grower or farm before locally:\n      const gkey = _.find(_.keys(acc.growers), k => acc.growers[k].name === grower.name)\n      if (gkey) grower.id = gkey;\n      const fkey = _.find(_.keys(acc.farms), k => acc.farms[k].name === farm.name);\n      if (fkey) farm.id = fkey;\n  \n      // Figure out if we already have this grower, farm, or field on the remote:\n      const rgkey = _.find(_.keys(remote.growers), k => remote.growers[k].name === grower.name)\n      if (rgkey) {\n        // Store both the key under growers (as id) and the resourceid (as _id)\n        grower.id = rgkey;\n        grower._id = remote.growers[rgkey]._id;\n      }\n      let rfkey = _.find(_.keys(remote.farms), k => remote.farms[k].name === farm.name)\n      if (rfkey) {\n        farm.id = rfkey;\n        farm._id = remote.farms[rfkey]._id;\n      }\n      rfkey = _.find(_.keys(remote.fields), k => remote.fields[k].name === field.name)\n      if (rfkey) {\n        field.id = rfkey;\n        field._id = remote.fields[rfkey]._id;\n      }\n  \n      // Assign new id's where we don't know them\n      if (!grower.id) grower.id = uuidv4();\n      if (!farm.id) farm.id = uuidv4();\n      if (!field.id) field.id = uuidv4();\n  \n      // Assign the proper links within farm and field to their parent.\n      // If the grower or farm does not have an _id, then it is not in the\n      // remote and will have to be created. The eventually created link will be at resources/<id>\n      // i.e. we will re-use the UUID keys as their resourceid\n      farm.grower = { _id: grower._id || `resources/${grower.id}` };\n      field.farm = { _id: farm._id || `resources/${farm.id}` };\n  \n      // Store grower, farm, field, in accumulator\n      acc.growers[grower.id] = grower;\n      acc.farms[farm.id] = farm;\n      acc.fields[field.id] = field;\n      return acc;\n    }, { growers: {}, farms: {}, fields: {} });\n\n    // At this point, anything under growers, farms, or fields that has an _id is \n    // already on the remote server, and anything without an _id is not\n    return { growers, farms, fields };\n  }\n\n  // expects local.growers, local.farms, local.fields\n  async constructJobList(local) {\n    // Build a nice array of everything to be done so we can\n    // manage concurrency.  i.e. find all the things without\n    // an _id key.\n    return _.reduce(['growers', 'farms', 'fields'], (acc,lt) => {\n      _.each(local[lt], l => {\n        if (!l._id) {\n          acc.push({ type: lt.replace(/s$/,''), listtype: lt, data: l });\n        }\n      });\n      return acc;\n    }, []);\n  }\n\n  async putAllJobsToOADA(jobs) {\n    console.log('Have '+jobs.length+' jobs to do, creating all the resources');\n    this.setState({ message: 'Creating '+jobs.length+' resources in OADA' });\n\n    const log = [];\n\n    await Promise.map(jobs, async j => {\n      const data = _.cloneDeep(j.data);\n      const path = `/bookmarks/fields/${j.type}s/${data.id}`;\n      if (data.id) delete data.id; // not included in remote\n      if (data.type) delete data.type;\n//      if (data._id) delete data._id; // not included in remote\n      console.log('Creating resource, job = ', j);\n      console.log('Putting to path = ', path);\n      try {\n        await con.put({ \n          path, \n          data, \n          tree\n        });\n      } catch (err) {\n       console.log('errored on ', data) \n      }\n      log.push({ resource: path, action: 'create', type: j.type, data });\n    }, { concurrency: 5 });\n\n    this.setState({ showcomplete: true });\n    return log;\n  }\n\n  async droppedFiles(files) {\n    this.setState({ message: 'Connecting to OADA...' });\n    this.setState({ showdropzone: false });\n\n    // Connect using a token from localstorage (should be handled by the cache itself already)\n    console.log('Reusing token', this.state.token)\n    con = await oada.connect({\n      token: this.state.token,  // token is cached in lib, use that one\n      domain: this.state.domain, \n      cache: false\n    });\n  \n    files.forEach(async f => {\n    /*\n      console.log('Ensuring growers, farms, fields base paths exist on remote');\n      await Promise.map(['grower', 'farms', 'fields'], lt => \n        con.put({ path: `/bookmarks/fields/${lt}`, tree, data: {}, headers: { 'content-type': `application/vnd.oada.${lt}.1+json` } })\n      );\n      */\n  \n      const { geojson, remote } = await Promise.props({\n        // Read and convert local file to geojson\n        geojson: new Promise((resolve,reject) => {\n          console.log('Reading local KML file and converting to goejson');\n          const reader = new FileReader()\n          reader.onabort = () => { console.log('file reading was aborted'); reject(); }\n          reader.onerror = () => { console.log('file reading has failed');  reject(); }\n          reader.onload = async () => {\n            const binaryStr = reader.result;\n            const domparser = new DOMParser();\n            const kml = domparser.parseFromString(binaryStr, 'text/xml');\n            const geojson = togeojson.kml(kml);\n            console.log('kml = ', kml, ', geojson = ', geojson);\n            console.log('Extracting growers, farms, fields locally...');\n            resolve(geojson);\n          }\n          reader.readAsText(f);\n        }),\n  \n        // Fetch current state of all remote resources to match up names/id's\n        remote: this.fetchAllRemoteGFF(),\n      });\n \n      this.setState({ message: 'Comparing KML with what you have to decide if anything is new' });\n      console.log('Harmonizing local GFF with remote GFF, remote = ', remote);\n      const local = this.geoJSONToOADA({geojson, remote});\n  \n      console.log('Preparing to update remote, Final local gff = ', local);\n      const jobs = await this.constructJobList(local);\n      this.setState({\n        jobs, showapproval: true, message: false,\n      });\n      \n      console.log('Done!');\n    })\n\n  }\n\n  async doLogin() {\n    let domain = this.state.domain;\n    if (typeof domain === 'string' && !domain.match(/^http/)) {\n      domain = 'https://'+domain;\n    }\n    localStorage['oada.domain'] = domain;\n\n    const cfg = await config;\n    trace('redirect = ', config.redirect);\n    // Get new token\n    con = await oada.connect({\n      domain: this.state.domain, \n      cache: false,\n      options: {\n        redirect: cfg.redirect,\n        metadata: cfg.metadata,\n        scope: cfg.scope,\n      },\n    });\n\n    let token = con.token;\n    this.setState({\n      token,\n      showlogin: false,\n      showdropzone: true,\n    });\n    console.log('Have connection and token');\n  }\n\n  async doLogout() {\n    console.log('Calling resetDomainCache...');\n    await oada.resetDomainCache(this.state.domain); // also clears the cached token\n    this.setState({ showlogin: true, showdropzone: false, showcomplete: false, showapproval: false, token: false });\n  }\n\n  domainChanged(evt) {\n    let domain = evt.target.value;\n    this.setState({ domain });\n  }\n\n  render() {\n    const jobs = this.state.jobs || [];\n    const approvals = {\n      growers: _.filter(jobs, j => j.type === 'grower'),\n      farms: _.filter(jobs, j => j.type === 'farm'),\n      fields: _.filter(jobs, j => j.type === 'field'),\n    };\n    \n    return (\n      <div className=\"App\" style={{ fontFamily: 'arial' }}>\n        <Helmet>\n          <title>OpenATK Fields Importer - v{pkg.version}</title>\n        </Helmet>\n        <div style={{ backgroundColor: '#0066CC', color: '#FFFFFF', fontSize: '2em', padding: '5px', textAlign: 'left', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          <div>OpenAgToolkit Fields Importer</div>\n          <div style={{flexGrow: 1}}></div>\n          {this.state.showlogin ? '' : \n            <div onClick={() => this.doLogout()} style={{ fontSize: '0.7em', color: '#FFFFFF', textDecoration: 'underline' }}>\n              {this.state.token ? 'Logout' : 'Login'}\n            </div>\n          }\n        </div>\n\n\n        {this.state.message ? <div style={{color: '#00AA00', padding: '5px', margin: '5px' }}>{this.state.message}</div> : null }\n\n        {!this.state.showlogin ? '' : \n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div style={{ fontSize: '2em', padding: '20px' }}>Where should I sync fields to?</div>\n            <div style={{  }}><input style={{fontSize: '1.0em', width: '250px'}} type=\"text\" value={this.state.domain || ''} onChange={evt => this.domainChanged(evt)} /></div>\n            <div style={{ margin : '10px', borderRadius: '3px', border: '1px solid #CCCCCC', width: '250px', backgroundColor: '#3399FF', color: '#FFFFFF', fontSize: '2em', cursor: 'pointer'  }} onClick={() => this.doLogin()}>Connect</div>\n          </div>\n        }\n\n        {! this.state.showdropzone ? '' : \n          <div>\n            <p>Drop a KML from Ag Leader SMS here and it will ensure those growers, farms, and fields exist at your OADA cloud.</p>\n            <Dropzone onDrop={f => this.droppedFiles(f)}>\n              {({getRootProps, getInputProps}) => (\n                <section>\n                  <div style={{\n                       flex: 1, display: 'flex', \n                       justifyContent: 'center',\n                       alignItems: 'center',\n                       border: '3px dashed #BBBBBB', \n                       borderRadius: '10px',\n                       margin: '5px',\n                       padding: '5px',\n                       minHeight: '50vh',\n                    }} {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <p key='thep'>Drop KML files with your fields here.</p>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          </div>\n        }\n\n        {!this.state.showapproval ? null : \n          <div>\n            { approvals.growers.length < 1 && approvals.farms.length < 1 && approvals.fields.length < 1\n              ? <div style={{color: '#00BB00', padding: '5px', margin: '5px'}}>\n                  Your remote OADA cloud is up to date with the names in this KML file, nothing new to send!\n                </div>\n              : <div style={{ padding: '10px' }}>\n                  <div style={{ fontSize: '2em' }}>About to add the following items to your remote OADA cloud</div>\n                  <div onClick={() => {\n                      this.setState({ showapproval: false });\n                      this.putAllJobsToOADA(this.state.jobs);\n                    }} style={{ backgroundColor: '#3399FF', borderRadius: '3px', color: '#FFFFFF', fontSize: '1.5em', margin: '15px' }}>\n                    Click to Approve\n                  </div>\n                </div>\n            }\n            {_.map(['growers', 'farms', 'fields'], t => {\n              console.log(\"WTF APPROVALS\", t, approvals[t])\n              if (approvals[t].length < 1) return null;\n              return (\n                <div key={t+'-list'}>\n                  <div style={{ textAlign: 'left', padding: '5px', fontWeight: 'bold', fontSize: '1.5em' }}>{capitalizeFirstLetter(t)} ({approvals[t].length} new):</div>\n                  <div style={{ display: 'flex', flexWrap: 'wrap', flexDirection: 'row' }}>\n                    {_.map(approvals[t], (f,i) => \n                      <div key={'approval'+t+i} style={{ padding: '5px', margin: '5px', borderRadius: '2px', border: '1px solid #EEEEEE' }}>\n                        {f.data.name}\n                      </div>)\n                    }\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        }\n\n        {!this.state.showcomplete ? null : \n          <div style={{color: 'green' }}>\n            Complete!\n          </div>\n        }\n\n        <div className='footer-bar' style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center', flexWrap: 'wrap', position: 'absolute', bottom: '0px', width: '99vw' }}>\n          <div className='footer-bar-element'>\n            <b>License:</b><br/>Apache 2.0\n          </div>\n          <div className='footer-bar-element'>\n            <a href=\"http://trellisframework.org\">\n              <img className='footer-logo' alt='trellis' width='200px' src='/fields-importer/logo-trellis.png'/>\n            </a>\n          </div>\n          <div className='footer-bar-element'>\n            <a href=\"http://oatscenter.org\">\n              <img className='footer-logo' alt='oats' width='200px' src='/fields-importer/logo-oats.png'/>\n            </a>\n          </div>\n          <div className='footer-bar-element'>\n            <a href=\"http://oatscenter.org\">\n              <img className='footer-logo' alt='purdue' width='200px' src='/fields-importer/logo-purdue.png'/>\n            </a>\n          </div>\n          <div className='footer-bar-element'>\n            Many thanks to key sponsor <br/><a href='https://winfieldunited.com'>Winfield United</a>!\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}