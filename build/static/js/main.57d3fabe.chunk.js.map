{"version":3,"sources":["dev-cert/signed_software_statement.js","dev-cert/unsigned_software_statement.js","tree.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","redirect_uris","token_endpoint_auth_method","grant_types","response_types","client_name","client_uri","contacts","jwks","keys","bookmarks","_type","_rev","fields","farm","farms","grower","growers","getAccessTokenAsync","Promise","promisify","oadaid","getAccessToken","con","App","props","token","localStorage","length","domain","match","state","showlogin","showdropzone","showapproval","showcomplete","message","jobs","this","setState","get","path","then","r","data","root","reduce","_","acc","g","a","concurrency","f","geojson","remote","features","name","properties","field","boundary","geometry","gkey","find","k","id","fkey","rgkey","_id","rfkey","uuidv4","local","lt","each","l","push","type","replace","listtype","console","log","map","j","cloneDeep","put","headers","resource","action","jobsthistype","filter","files","oada","connect","cache","forEach","tree","resolve","reject","reader","FileReader","onabort","onerror","onload","binaryStr","result","domparser","DOMParser","kml","parseFromString","togeojson","readAsText","fetchAllRemoteGFF","geoJSONToOADA","constructJobList","redirect","udevcert","metadata","devcert","scope","access_token","evt","target","value","approvals","className","style","fontFamily","Helmet","pkg","version","backgroundColor","color","fontSize","padding","textAlign","display","flexDirection","alignItems","flexGrow","onClick","doLogout","textDecoration","margin","width","onChange","domainChanged","borderRadius","border","cursor","doLogin","onDrop","droppedFiles","getRootProps","getInputProps","flex","justifyContent","minHeight","key","putAllJobsToOADA","t","fontWeight","string","charAt","toUpperCase","slice","flexWrap","i","position","bottom","href","src","React","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"+HAAAA,EAAOC,QAAU,i3E,kBCAjBD,EAAOC,QAAU,CACfC,cAAe,CACb,8CACC,6CACK,2DACN,kEAEFC,2BACE,yDACFC,YAAa,CAAC,sBACdC,eAAgB,CACd,QACA,OACA,WACA,iBACA,gBACA,aACA,uBAEFC,YAAa,0BACbC,WAAY,sCACZC,SAAU,CAAC,kCACXC,KAAM,CACJC,KAAM,CACH,CAAC,IAAM,MAAM,IAAM,mCAAmC,EAAI,OAAO,EAAI,8V,w8CCxB7D,GACbC,UAAW,CACTC,MAAO,wCACPC,KAAM,EACNC,OAAQ,CACNF,MAAO,qCACPC,KAAM,EACNC,OAAQ,CACN,IAAK,CACHF,MAAO,oCACPC,KAAM,EACNE,KAAM,CACJH,MAAO,sCAIbI,MAAO,CACL,IAAK,CACHJ,MAAO,mCACPC,KAAM,EACNI,OAAQ,CACNL,MAAO,wCAIbM,QAAS,CACP,IAAK,CACHN,MAAO,qCACPC,KAAM,OCXVM,EAAsBC,IAAQC,UAAUC,IAAOC,gBAEjDC,GAAM,E,IAmXKC,E,kDA3Wb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAIC,EAAQC,aAAa,gBAAiB,GAC5B,UAAVD,GAAuC,kBAAVA,GAAsBA,EAAME,OAAS,KACpEF,GAAQ,GAEV,IAAIG,EAASF,aAAa,iBAAkB,EAP3B,OAQF,UAAXE,GAAyC,kBAAXA,GAAuBA,EAAOD,OAAS,KACvEC,GAAS,GAEPA,IAAWA,EAAOC,MAAM,WAAUD,EAAS,WAAWA,GAE1D,EAAKE,MAAQ,CACXC,WAAYN,EACZO,eAAgBP,EAChBQ,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,KAAM,GACNR,SACAH,MAAOA,GArBQ,E,+LA0BjBY,KAAKC,SAAS,CAAEH,QAAS,oC,SACNb,EAAIiB,IAAI,CAACC,KAAM,sBAAsBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,Q,cAA9DC,E,gBACmC1B,IAAQM,MAAM,CACrDR,QAASE,IAAQ2B,OAAOC,IAAEtC,KAAKoC,EAAK5B,SAA3B,uCAAqC,WAAO+B,EAAIC,GAAX,SAAAC,EAAA,sEACpB3B,EAAIiB,IAAI,CAAEC,KAAK,6BAAD,OAA+BQ,KAAOP,MAAK,SAAAC,GAAC,OAAEA,EAAEC,QAD1C,cACnCI,EAAIC,GAD+B,yBAE5BD,GAF4B,2CAArC,wDAGG,GAAI,CAAEG,YAAa,IAC7BpC,MAAOI,IAAQ2B,OAAOC,IAAEtC,KAAKoC,EAAK9B,OAA3B,uCAAqC,WAAOiC,EAAII,GAAX,SAAAF,EAAA,sEACpB3B,EAAIiB,IAAI,CAAEC,KAAK,2BAAD,OAA6BW,KAAOV,MAAK,SAAAC,GAAC,OAAEA,EAAEC,QADxC,cACnCI,EAAII,GAD+B,yBAE5BJ,GAF4B,2CAArC,wDAGG,GAAI,CAAEG,YAAa,IAC9BtC,OAAQM,IAAQ2B,OAAOC,IAAEtC,KAAKoC,EAAKhC,QAA3B,uCAAqC,WAAOmC,EAAII,GAAX,SAAAF,EAAA,sEACpB3B,EAAIiB,IAAI,CAAEC,KAAK,4BAAD,OAA8BW,KAAOV,MAAK,SAAAC,GAAC,OAAEA,EAAEC,QADzC,cACnCI,EAAII,GAD+B,yBAE5BJ,GAF4B,2CAArC,wDAGG,GAAI,CAAEG,YAAa,M,uBAZzBlC,E,EAAAA,QAASF,E,EAAAA,MAAOF,E,EAAAA,O,kBAcjB,CAAEI,UAASF,QAAOF,W,8IAOO,IAAnBwC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,OAAS,EACIP,IAAED,OAAOO,EAAQE,UAAU,SAACP,EAAII,GAEjE,IAAMpC,EAAS,CAAEwC,KAAMJ,EAAEK,WAAW,kBAC9B3C,EAAO,CAAE0C,KAAMJ,EAAEK,WAAW,gBAC5BC,EAAQ,CAAEF,KAAMJ,EAAEK,WAAW,gBAAiBE,SAAUP,EAAEQ,UAG1DC,EAAOd,IAAEe,KAAKf,IAAEtC,KAAKuC,EAAI/B,UAAU,SAAA8C,GAAC,OAAIf,EAAI/B,QAAQ8C,GAAGP,OAASxC,EAAOwC,QACzEK,IAAM7C,EAAOgD,GAAKH,GACtB,IAAMI,EAAOlB,IAAEe,KAAKf,IAAEtC,KAAKuC,EAAIjC,QAAQ,SAAAgD,GAAC,OAAIf,EAAIjC,MAAMgD,GAAGP,OAAS1C,EAAK0C,QACnES,IAAMnD,EAAKkD,GAAKC,GAGpB,IAAMC,EAAQnB,IAAEe,KAAKf,IAAEtC,KAAK6C,EAAOrC,UAAU,SAAA8C,GAAC,OAAIT,EAAOrC,QAAQ8C,GAAGP,OAASxC,EAAOwC,QAChFU,IAEFlD,EAAOgD,GAAKE,EACZlD,EAAOmD,IAAMb,EAAOrC,QAAQiD,GAAOC,KAErC,IAAIC,EAAQrB,IAAEe,KAAKf,IAAEtC,KAAK6C,EAAOvC,QAAQ,SAAAgD,GAAC,OAAIT,EAAOvC,MAAMgD,GAAGP,OAAS1C,EAAK0C,QA2B5E,OA1BIY,IACFtD,EAAKkD,GAAKI,EACVtD,EAAKqD,IAAMb,EAAOvC,MAAMqD,GAAOD,MAEjCC,EAAQrB,IAAEe,KAAKf,IAAEtC,KAAK6C,EAAOzC,SAAS,SAAAkD,GAAC,OAAIT,EAAOzC,OAAOkD,GAAGP,OAASE,EAAMF,WAEzEE,EAAMM,GAAKI,EACXV,EAAMS,IAAMb,EAAOzC,OAAOuD,GAAOD,KAI9BnD,EAAOgD,KAAIhD,EAAOgD,GAAKK,eACvBvD,EAAKkD,KAAIlD,EAAKkD,GAAKK,eACnBX,EAAMM,KAAIN,EAAMM,GAAKK,eAM1BvD,EAAKE,OAAS,CAAEmD,IAAKnD,EAAOmD,KAAP,oBAA2BnD,EAAOgD,KACvDN,EAAM5C,KAAO,CAAEqD,IAAKrD,EAAKqD,KAAL,oBAAyBrD,EAAKkD,KAGlDhB,EAAI/B,QAAQD,EAAOgD,IAAMhD,EACzBgC,EAAIjC,MAAMD,EAAKkD,IAAMlD,EACrBkC,EAAInC,OAAO6C,EAAMM,IAAMN,EAChBV,IACN,CAAE/B,QAAS,GAAIF,MAAO,GAAIF,OAAQ,KAIrC,MAAO,CAAEI,QApDsB,EACvBA,QAmDUF,MApDa,EACdA,MAmDQF,OApDM,EACPA,U,gFAuDHyD,G,0FAIdvB,IAAED,OAAO,CAAC,UAAW,QAAS,WAAW,SAACE,EAAIuB,GAMnD,OALAxB,IAAEyB,KAAKF,EAAMC,IAAK,SAAAE,GACXA,EAAEN,KACLnB,EAAI0B,KAAK,CAAEC,KAAMJ,EAAGK,QAAQ,KAAK,IAAKC,SAAUN,EAAI3B,KAAM6B,OAGvDzB,IACN,K,kLAGkBX,G,8EACrByC,QAAQC,IAAI,QAAQ1C,EAAKT,OAAO,2CAChCU,KAAKC,SAAS,CAAEH,QAAS,YAAYC,EAAKT,OAAO,uBAE3CmD,EAAM,G,SACN5D,IAAQ6D,IAAI3C,EAAZ,uCAAkB,WAAM4C,GAAN,iBAAA/B,EAAA,6DAChBN,EAAOG,IAAEmC,UAAUD,EAAErC,MACrBH,EAFgB,qBAEKG,EAAKoB,IAC5BpB,EAAKoB,WAAWpB,EAAKoB,GACrBpB,EAAKuB,YAAYvB,EAAKuB,IAC1BW,QAAQC,IAAI,4BAA6BE,GALnB,SAMhB1D,EAAI4D,IAAI,CAAE1C,OAAMG,OAAMwC,QAAS,CAAE,eAAe,wBAAf,OAAwCH,EAAEN,KAA1C,cANjB,OAOtBI,EAAIL,KAAK,CAAEW,SAAU5C,EAAM6C,OAAQ,SAAUX,KAAMM,EAAEN,KAAM/B,SAPrC,2CAAlB,sDAQH,CAAEO,YAAa,I,cAElBb,KAAKC,SAAS,CAAEH,QAAS,6BACzB0C,QAAQC,IAAI,4E,SACN5D,IAAQ6D,IAAI,CAAC,UAAW,QAAS,UAAjC,uCAA4C,WAAMT,GAAN,mBAAArB,EAAA,4DAC1CqC,EAAexC,IAAEyC,OAAOnD,GAAM,SAAA4C,GAAC,OAAIA,EAAEJ,WAAaN,OACpCgB,EAAa3D,OAAS,GAFM,uBAG9CkD,QAAQC,IAAI,MAAMR,EAAG,mCAHyB,iCAM1C3B,EAAOG,IAAED,OAAOyC,GAAc,SAACvC,EAAIiC,GAEvC,OADAjC,EAAIiC,EAAErC,KAAKoB,IAAM,CAAEG,IAAI,aAAD,OAAec,EAAErC,KAAKoB,IAAMpD,KAAM,GACjDoC,IACN,IACGP,EAV0C,4BAUd8B,GAVc,SAW1ChD,EAAI4D,IAAI,CAAE1C,OAAMG,OAAMwC,QAAS,CAAE,eAAe,wBAAf,OAAwCb,EAAxC,cAXS,OAYhDQ,EAAIL,KAAK,CAAEW,SAAS,qBAAD,OAAuBd,GAAMe,OAAQ,MAAOX,KAAMJ,EAAI3B,SAZzB,2CAA5C,uD,cAeNN,KAAKC,SAAS,CAAEJ,cAAc,IAC9B2C,QAAQC,IAAI,sC,kBACLA,G,oLAGUU,G,mFACjBnD,KAAKC,SAAS,CAAEH,QAAS,0BACzBE,KAAKC,SAAS,CAAEN,cAAc,I,SAClByD,IAAKC,QAAQ,CACvBjE,MAAOY,KAAKP,MAAML,MAAOG,OAAQS,KAAKP,MAAMF,OAAQ+D,OAAO,I,OAD7DrE,E,OAIAkE,EAAMI,QAAN,uCAAc,WAAMzC,GAAN,uBAAAF,EAAA,6DACZ4B,QAAQC,IAAI,8DADA,SAEN5D,IAAQ6D,IAAI,CAAC,SAAU,QAAS,WAAW,SAAAT,GAAE,OACjDhD,EAAI4D,IAAI,CAAE1C,KAAK,qBAAD,OAAuB8B,GAAMuB,OAAMlD,KAAM,GAAIwC,QAAS,CAAE,eAAe,wBAAf,OAAwCb,EAAxC,iBAH5D,uBAMsBpD,IAAQM,MAAM,CAE9C4B,QAAS,IAAIlC,KAAQ,SAAC4E,EAAQC,GAC5BlB,QAAQC,IAAI,oDACZ,IAAMkB,EAAS,IAAIC,WACnBD,EAAOE,QAAU,WAAQrB,QAAQC,IAAI,4BAA6BiB,KAClEC,EAAOG,QAAU,WAAQtB,QAAQC,IAAI,2BAA6BiB,KAClEC,EAAOI,OAAP,sBAAgB,kCAAAnD,EAAA,sDACRoD,EAAYL,EAAOM,OACnBC,EAAY,IAAIC,UAChBC,EAAMF,EAAUG,gBAAgBL,EAAW,YAC3CjD,EAAUuD,IAAUF,IAAIA,GAC9B5B,QAAQC,IAAI,SAAU2B,EAAK,eAAgBrD,GAC3CyB,QAAQC,IAAI,gDACZgB,EAAQ1C,GAPM,2CAShB4C,EAAOY,WAAWzD,MAIpBE,OAAQ,EAAKwD,sBA1BH,uBAMJzD,EANI,EAMJA,QAASC,EANL,EAMKA,OAuBjB,EAAKf,SAAS,CAAEH,QAAS,kEACzB0C,QAAQC,IAAI,mDAAoDzB,GAC1DgB,EAAQ,EAAKyC,cAAc,CAAC1D,UAASC,WAE3CwB,QAAQC,IAAI,iDAAkDT,GAjClD,UAkCO,EAAK0C,iBAAiB1C,GAlC7B,QAkCNjC,EAlCM,OAmCZ,EAAKE,SAAS,CACZF,OAAMH,cAAc,EAAME,SAAS,IAGrC0C,QAAQC,IAAI,SAvCA,4CAAd,uD,gQA6CApD,aAAa,eAAiBW,KAAKP,MAAMF,OACnCoF,EAAoDC,IAASjH,cAAc,GACjF6E,QAAQC,IAAI,cAAekC,G,SACP/F,EAAoBoB,KAAKP,MAAMF,OAAO+C,QAAQ,cAAc,IAAK,CACnFuC,SAAUC,IACVC,MAAO,kBACPJ,aACCvE,MAAK,SAAAC,GAAC,OAAEA,EAAE2E,gB,OAJP5F,E,OAKNC,aAAa,cAAgBD,EAC7BY,KAAKC,SAAS,CACZb,QACAM,WAAW,EACXC,cAAc,I,uIAKhBN,aAAa,eAAgB,EAC7BW,KAAKC,SAAS,CAAEP,WAAW,EAAMC,cAAc,EAAOE,cAAc,EAAOD,cAAc,EAAOR,OAAO,M,oCAG3F6F,GACZ,IAAI1F,EAAS0F,EAAIC,OAAOC,MACnB5F,EAAOC,MAAM,WAAUD,EAAS,WAAWA,GAChDS,KAAKC,SAAS,CAAEV,a,+BAGR,IAAD,OACDQ,EAAOC,KAAKP,MAAMM,MAAQ,GAC1BqF,EAAY,CAChBzG,QAAS8B,IAAEyC,OAAOnD,GAAM,SAAA4C,GAAC,MAAe,WAAXA,EAAEN,QAC/B5D,MAAOgC,IAAEyC,OAAOnD,GAAM,SAAA4C,GAAC,MAAe,SAAXA,EAAEN,QAC7B9D,OAAQkC,IAAEyC,OAAOnD,GAAM,SAAA4C,GAAC,MAAe,UAAXA,EAAEN,SAGhC,OACE,yBAAKgD,UAAU,MAAMC,MAAO,CAAEC,WAAY,UACxC,kBAACC,EAAA,EAAD,KACE,6DAAmCC,EAAIC,UAEzC,yBAAKJ,MAAO,CAAEK,gBAAiB,UAAWC,MAAO,UAAWC,SAAU,MAAOC,QAAS,MAAOC,UAAW,OAAQC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WACjK,8DACA,yBAAKZ,MAAO,CAACa,SAAU,KACtBnG,KAAKP,MAAMC,UAAY,GACtB,yBAAK0G,QAAS,kBAAM,EAAKC,YAAYf,MAAO,CAAEO,SAAU,QAASD,MAAO,UAAWU,eAAgB,cAChGtG,KAAKP,MAAML,MAAQ,SAAW,UAMpCY,KAAKP,MAAMK,QAAU,yBAAKwF,MAAO,CAACM,MAAO,UAAWE,QAAS,MAAOS,OAAQ,QAAUvG,KAAKP,MAAMK,SAAiB,KAEjHE,KAAKP,MAAMC,UACX,yBAAK4F,MAAO,CAAEU,QAAS,OAAQC,cAAe,SAAUC,WAAY,WAClE,yBAAKZ,MAAO,CAAEO,SAAU,MAAOC,QAAS,SAAxC,kCACA,yBAAKR,MAAO,IAAM,2BAAOA,MAAO,CAACO,SAAU,QAASW,MAAO,SAAUnE,KAAK,OAAO8C,MAAOnF,KAAKP,MAAMF,QAAU,GAAIkH,SAAU,SAAAxB,GAAG,OAAI,EAAKyB,cAAczB,OACrJ,yBAAKK,MAAO,CAAEiB,OAAS,OAAQI,aAAc,MAAOC,OAAQ,oBAAqBJ,MAAO,QAASb,gBAAiB,UAAWC,MAAO,UAAWC,SAAU,MAAOgB,OAAQ,WAAcT,QAAS,kBAAM,EAAKU,YAA1M,YAJqB,GAQtB9G,KAAKP,MAAME,aACZ,6BACE,+IACA,kBAAC,IAAD,CAAUoH,OAAQ,SAAAjG,GAAC,OAAI,EAAKkG,aAAalG,MACtC,gBAAEmG,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,iCACE,uCAAK5B,MAAO,CACP6B,KAAM,EAAGnB,QAAS,OAClBoB,eAAgB,SAChBlB,WAAY,SACZU,OAAQ,qBACRD,aAAc,OACdJ,OAAQ,MACRT,QAAS,MACTuB,UAAW,SACPJ,KACP,0BAAWC,KACX,uBAAGI,IAAI,QAAP,+CAjBiB,GAyB3BtH,KAAKP,MAAMG,aACX,6BACIwF,EAAUzG,QAAQW,OAAS,GAAK8F,EAAU3G,MAAMa,OAAS,GAAK8F,EAAU7G,OAAOe,OAAS,EACtF,yBAAKgG,MAAO,CAACM,MAAO,UAAWE,QAAS,MAAOS,OAAQ,QAAvD,8FAGA,yBAAKjB,MAAO,CAAEQ,QAAS,SACrB,yBAAKR,MAAO,CAAEO,SAAU,QAAxB,8DACA,yBAAKO,QAAS,WACV,EAAKnG,SAAS,CAAEL,cAAc,IAC9B,EAAK2H,iBAAiB,EAAK9H,MAAMM,OAChCuF,MAAO,CAAEK,gBAAiB,UAAWgB,aAAc,MAAOf,MAAO,UAAWC,SAAU,QAASU,OAAQ,SAH5G,qBAQL9F,IAAEiC,IAAI,CAAC,UAAW,QAAS,WAAW,SAAA8E,GACrC,OAAIpC,EAAUoC,GAAGlI,OAAS,EAAU,KAElC,6BACE,yBAAMgG,MAAO,CAAES,UAAW,OAAQD,QAAS,MAAO2B,WAAY,OAAQ5B,SAAU,WAhUnE6B,EAgUqGF,GA/TpHG,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GA+TrC,KACA,yBAAKvC,MAAO,CAAEU,QAAS,OAAQ8B,SAAU,OAAQ7B,cAAe,QAC7DxF,IAAEiC,IAAI0C,EAAUoC,IAAI,SAAC1G,EAAEiH,GAAH,OACnB,yBAAKT,IAAK,WAAWE,EAAEO,EAAGzC,MAAO,CAAEQ,QAAS,MAAOS,OAAQ,MAAOI,aAAc,MAAOC,OAAQ,sBAC5F9F,EAAER,KAAKY,WApUhC,IAA+BwG,MA4SK,KAkC1B1H,KAAKP,MAAMI,aACX,yBAAKyF,MAAO,CAACM,MAAO,UAApB,aAD0B,KAM5B,yBAAKP,UAAU,aAAaC,MAAO,CAAEU,QAAS,OAAQC,cAAe,MAAOmB,eAAgB,eAAgBlB,WAAY,SAAU4B,SAAU,OAAQE,SAAU,WAAYC,OAAQ,MAAOzB,MAAO,SAC9L,yBAAKnB,UAAU,sBACb,uCAAe,6BADjB,cAGA,yBAAKA,UAAU,sBACb,uBAAG6C,KAAK,+BACN,yBAAK7C,UAAU,cAAcmB,MAAM,QAAQ2B,IAAI,uBAGnD,yBAAK9C,UAAU,sBACb,uBAAG6C,KAAK,yBACN,yBAAK7C,UAAU,cAAcmB,MAAM,QAAQ2B,IAAI,oBAGnD,yBAAK9C,UAAU,sBACb,uBAAG6C,KAAK,yBACN,yBAAK7C,UAAU,cAAcmB,MAAM,QAAQ2B,IAAI,sBAGnD,yBAAK9C,UAAU,sBAAf,8BAC6B,6BAAK,uBAAG6C,KAAK,8BAAR,mBADlC,W,GAnWQE,IAAMC,WCbJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjJ,MACvB,2DCZNkJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7I,MAAK,SAAA8I,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7G,QAAQ6G,MAAMA,EAAMvJ,c","file":"static/js/main.57d3fabe.chunk.js","sourcesContent":["module.exports = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InluMjJ1akJVQ0VlbE5VUnJhOW9na2hlRDJLRVhvbGprc21BVnFGcTBMUGciLCJqd2siOnsia3R5IjoiUlNBIiwia2lkIjoieW4yMnVqQlVDRWVsTlVScmE5b2draGVEMktFWG9samtzbUFWcUZxMExQZyIsIm4iOiJycjM4aUs4RmkwXy1DUkxUdlZLNElJQ2xhcmlpNndWSHBFN3paUFhvRVJsX09vaDY0WW1iUWNSYTVlRncwVVFoVXZFQ2hLdTlObzNqbTdMVzlaY0wxSEtyaGtVVy1PUW9iT1hVbnJDZ29DcGE4VlloX3dSSWRRWWJzdlBRVmo1Tkd1dU5YYVpCX19weEZ5LW5fTzJJTVM4T0dyZXptM2JRSERBZi1qbmdJaFpHWmdMYXZMSnlTSFV5RFFMNEZiUTZEM1F6M0FNT3J4RnZhNEtCSVBDUUtGT21ZWFZuNHp0Z1Q2OGhneU1vYzFLeXR4b1JnelZIbkNkVHBQV1dWcm5NRmNKZWRZRC1MbWswWG81cmpZT3htcThBMWVqZnhQTWVSXzNWNzhBSmsyTERJNHZHYUozZm5hUFpTN0N2VzhGM3BXV2lqX0J5VkdDSS01QnJrcUhfblEiLCJlIjoiQVFBQiJ9fQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vbG9jYWxob3N0OjMwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjMwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwczovL29wZW5hdGsuY29tL2ZpZWxkcy1pbXBvcnRlci9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHBzOi8vb3BlbmF0ay5naXRodWIuaW8vZmllbGRzLWltcG9ydGVyL29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIEZpZWxkcyBJbXBvcnRlciIsImNsaWVudF91cmkiOiJodHRwczovL29wZW5hdGsuY29tL2ZpZWxkcy1pbXBvcnRlciIsImNvbnRhY3RzIjpbIkFhcm9uIEF1bHQgPGF1bHRhY0BwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsImtpZCI6IjhkN2RlYmY4M2RlMDQxNTc5ZGIxOWY4NzE4ZTEyMjg4IiwiZSI6IkFRQUIiLCJuIjoiMWhYdU4tOEVQUUttX2xPcXpCaUpnbmI5eW8yZW90NzNCTi1jaWJoTmNib19QRVhLQWUzQWJIV1BYUXlfSTRpaGk3dDN6LTl4N1U0LUVSbGZfTHFJelVLZi01Y3U0b3lNZFlnTk9WeHo5TlVTUlZlZFUtd3dmV24xMmpJRTY3eWNBVnFCQl9TSTFvSG10WmtaYXV3TXVrX0tlbDh2Z283WlR0Y3Zsb1JxdVVoRHJyOE5zUDlodkVjS0NMSzN0V0V6SUU2a0Z0MzNBN0hvSU1ZaFJGSmpkaVFTOGgzZzNwamtoam5pUWo5RTRLeTg3aktwZWVQUWZMWHlSdDhub3RnY0dkSXZoZ1Z5TlFtYmVacUZNUVFLZzB2UUg2WHZXN0Z2WFg2N0hUdENMUDFRQ3pvTmNtdmFaVXV6aE5BNXp2eWM1TlpXMTlHTXRkc1JwT3VXdzRpeVlRIn1dfX0.C-JovRcGr8FzL1GWiqOL4O57q198aXmOWH6dl4eAv-n7arJa31REYgEQB-WdgIXj5XblQpLRPtbwvzU6JFVC2KHb3Il1LW02bcgQN7lnWirZmndxjhnlYLyk-AyIYq9Td5-KoYVWgKFUJZR2MYHcGUZqA5PlX1U3yTrQxQX9QzfoLNhloqJ-Ww4rlz4xwXfLvJ_TApyVVIbNUMe2arV894JonvXvH7RaO5lYQsL5NXPZi1ec_XDBnjJ0tyJ8v9g7UfZ3D_pRo6VruGUfxh8-9d8RlT-v1sPA9ndmLPk-xwdhWbX4uugeUN3UEdHtxYB3Swk61GXN0mjbd8NWPyxgKw\";","module.exports = {\n  redirect_uris: [\n    'https://localhost:3000/oauth2/redirect.html', \n     'http://localhost:3000/oauth2/redirect.html', \n          'https://openatk.com/fields-importer/oauth2/redirect.html', \n    'https://openatk.github.io/fields-importer/oauth2/redirect.html' \n  ],\n  token_endpoint_auth_method:\n    'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n  grant_types: ['authorization_code'],\n  response_types: [\n    'token',\n    'code',\n    'id_token',\n    'id_token token',\n    'code id_token',\n    'code token',\n    'code id_token token'\n  ],\n  client_name: 'OpenATK Fields Importer',\n  client_uri: 'https://openatk.com/fields-importer',\n  contacts: ['Aaron Ault <aultac@purdue.edu>'],\n  jwks: {\n    keys: [\n       {\"kty\":\"RSA\",\"kid\":\"8d7debf83de041579db19f8718e12288\",\"e\":\"AQAB\",\"n\":\"1hXuN-8EPQKm_lOqzBiJgnb9yo2eot73BN-cibhNcbo_PEXKAe3AbHWPXQy_I4ihi7t3z-9x7U4-ERlf_LqIzUKf-5cu4oyMdYgNOVxz9NUSRVedU-wwfWn12jIE67ycAVqBB_SI1oHmtZkZauwMuk_Kel8vgo7ZTtcvloRquUhDrr8NsP9hvEcKCLK3tWEzIE6kFt33A7HoIMYhRFJjdiQS8h3g3pjkhjniQj9E4Ky87jKpeePQfLXyRt8notgcGdIvhgVyNQmbeZqFMQQKg0vQH6XvW7FvXX67HTtCLP1QCzoNcmvaZUuzhNA5zvyc5NZW19GMtdsRpOuWw4iyYQ\"}\n    ],\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0,\n          grower: {\n            _type: \"application/vnd.oada.grower.1+json\",\n          }\n        }\n      },\n      growers: {\n        \"*\": {\n          _type: 'application/vnd.oada.grower.1+json',\n          _rev: 0\n        }\n      }\n    },\n  }\n}\n\n\n","import React from 'react';\nimport oadaid from '@oada/oada-id-client/dist/browser';\nimport devcert from './dev-cert/signed_software_statement.js';\nimport udevcert from './dev-cert/unsigned_software_statement.js';\nimport { Helmet } from 'react-helmet';\nimport pkg from '../package.json';\n\nimport './App.css';\n\nimport Promise from 'bluebird';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport oada from '@oada/oada-cache';\nimport Dropzone from 'react-dropzone';\nimport togeojson from '@mapbox/togeojson';\nimport tree from './tree';\n\nconst getAccessTokenAsync = Promise.promisify(oadaid.getAccessToken);\n\nlet con = false;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let token = localStorage['oada.token'] || false;\n    if (token === 'false' || (typeof token === 'string' && token.length < 1)) {\n      token = false;\n    }\n    let domain = localStorage['oada.domain'] || false;\n    if (domain === 'false' || (typeof domain === 'string' && domain.length < 1)) {\n      domain = false;\n    }\n    if (domain && !domain.match(/^http/)) domain = 'https://'+domain;\n\n    this.state = { \n      showlogin: !token, // no token, show login\n      showdropzone: !!token, // have token, show dropzone\n      showapproval: false,\n      showcomplete: false,\n      message: false,\n      jobs: [],\n      domain,\n      token: token,\n    };\n  }\n\n  async fetchAllRemoteGFF() {\n    this.setState({ message: 'Fetching your current fields...'});\n    const root = await con.get({path: '/bookmarks/fields'}).then(r => r.data);\n    const { growers, farms, fields } = await Promise.props({\n      growers: Promise.reduce(_.keys(root.growers), async (acc,g) => { \n                 acc[g] = await con.get({ path: `/bookmarks/fields/growers/${g}` }).then(r=>r.data); \n                 return acc;\n               }, {}, { concurrency: 5 } ),\n        farms: Promise.reduce(_.keys(root.farms),   async (acc,f) => { \n                 acc[f] = await con.get({ path: `/bookmarks/fields/farms/${f}` }).then(r=>r.data); \n                 return acc \n               }, {}, { concurrency: 5 } ),\n       fields: Promise.reduce(_.keys(root.fields),  async (acc,f) => { \n                 acc[f] = await con.get({ path: `/bookmarks/fields/fields/${f}` }).then(r=>r.data); \n                 return acc \n               }, {}, { concurrency: 5 } ),\n    });\n    return { growers, farms, fields };\n  }\n\n\n  // Expects a feature array (i.e. geojson.features is an array), and expects\n  // each item to have propterties with Grower - Name, Farm - Name, Field - Name\n  // from SST export\n  geoJSONToOADA({geojson, remote}) {\n    const { growers, farms, fields } = _.reduce(geojson.features, (acc,f) => {\n      // Extract names from the KML:\n      const grower = { name: f.properties['Grower - Name'] };\n      const farm = { name: f.properties['Farm - Name'] };\n      const field = { name: f.properties['Field - Name'], boundary: f.geometry };\n  \n      // Figure out if we've seen this grower or farm before locally:\n      const gkey = _.find(_.keys(acc.growers), k => acc.growers[k].name === grower.name)\n      if (gkey) grower.id = gkey;\n      const fkey = _.find(_.keys(acc.farms), k => acc.farms[k].name === farm.name);\n      if (fkey) farm.id = fkey;\n  \n      // Figure out if we already have this grower, farm, or field on the remote:\n      const rgkey = _.find(_.keys(remote.growers), k => remote.growers[k].name === grower.name)\n      if (rgkey) {\n        // Store both the key under growers (as id) and the resourceid (as _id)\n        grower.id = rgkey;\n        grower._id = remote.growers[rgkey]._id;\n      }\n      let rfkey = _.find(_.keys(remote.farms), k => remote.farms[k].name === farm.name)\n      if (rfkey) {\n        farm.id = rfkey;\n        farm._id = remote.farms[rfkey]._id;\n      }\n      rfkey = _.find(_.keys(remote.fields), k => remote.fields[k].name === field.name)\n      if (rfkey) {\n        field.id = rfkey;\n        field._id = remote.fields[rfkey]._id;\n      }\n  \n      // Assign new id's where we don't know them\n      if (!grower.id) grower.id = uuidv4();\n      if (!farm.id) farm.id = uuidv4();\n      if (!field.id) field.id = uuidv4();\n  \n      // Assign the proper links within farm and field to their parent.\n      // If the grower or farm does not have an _id, then it is not in the\n      // remote and will have to be created. The eventually created link will be at resources/<id>\n      // i.e. we will re-use the UUID keys as their resourceid\n      farm.grower = { _id: grower._id || `resources/${grower.id}` };\n      field.farm = { _id: farm._id || `resources/${farm.id}` };\n  \n      // Store grower, farm, field, in accumulator\n      acc.growers[grower.id] = grower;\n      acc.farms[farm.id] = farm;\n      acc.fields[field.id] = field;\n      return acc;\n    }, { growers: {}, farms: {}, fields: {} });\n\n    // At this point, anything under growers, farms, or fields that has an _id is \n    // already on the remote server, and anything without an _id is not\n    return { growers, farms, fields };\n  }\n\n  // expects local.growers, local.farms, local.fields\n  async constructJobList(local) {\n    // Build a nice array of everything to be done so we can\n    // manage concurrency.  i.e. find all the things without\n    // an _id key.\n    return _.reduce(['growers', 'farms', 'fields'], (acc,lt) => {\n      _.each(local[lt], l => {\n        if (!l._id) {\n          acc.push({ type: lt.replace(/s$/,''), listtype: lt, data: l });\n        }\n      });\n      return acc;\n    }, []);\n  }\n\n  async putAllJobsToOADA(jobs) {\n    console.log('Have '+jobs.length+' jobs to do, creating all the resources');\n    this.setState({ message: 'Creating '+jobs.length+' resources in OADA' });\n\n    const log = [];\n    await Promise.map(jobs, async j => {\n      const data = _.cloneDeep(j.data);\n      const path = `/resources/${data.id}`;\n      if (data.id) delete data.id; // not included in remote\n      if (data._id) delete data._id; // not included in remote\n      console.log('Creating resource, job = ', j);\n      await con.put({ path, data, headers: { 'content-type': `application/vnd.oada.${j.type}.1+json` } });\n      log.push({ resource: path, action: 'create', type: j.type, data });\n    }, { concurrency: 5 });\n \n    this.setState({ message: 'Linking to new resources' });\n    console.log('Created all the resources, now putting links to each of the master lists');\n    await Promise.map(['growers', 'farms', 'fields'], async lt => {\n      const jobsthistype = _.filter(jobs, j => j.listtype === lt);\n      if (jobsthistype && jobsthistype.length < 1) {\n        console.log('No '+lt+' added, not updating master lst');\n        return;\n      }\n      const data = _.reduce(jobsthistype, (acc,j) => {\n        acc[j.data.id] = { _id: `resources/${j.data.id}`, _rev: 0 };\n        return acc;\n      }, {});\n      const path = `/bookmarks/fields/${lt}`;\n      await con.put({ path, data, headers: { 'content-type': `application/vnd.oada.${lt}.1+json` } });\n      log.push({ resource: `/bookmarks/fields/${lt}`, action: 'put', type: lt, data });\n    });\n  \n    this.setState({ showcomplete: true });\n    console.log('Posted all links to each list type');\n    return log;\n  }\n\n  async droppedFiles(files) {\n    this.setState({ message: 'Connecting to OADA...' });\n    this.setState({ showdropzone: false });\n    con = await oada.connect({\n      token: this.state.token, domain: this.state.domain, cache: false\n    });\n  \n    files.forEach(async f => {\n      console.log('Ensuring growers, farms, fields base paths exist on remote');\n      await Promise.map(['grower', 'farms', 'fields'], lt => \n        con.put({ path: `/bookmarks/fields/${lt}`, tree, data: {}, headers: { 'content-type': `application/vnd.oada.${lt}.1+json` } })\n      );\n  \n      const { geojson, remote } = await Promise.props({\n        // Read and convert local file to geojson\n        geojson: new Promise((resolve,reject) => {\n          console.log('Reading local KML file and converting to goejson');\n          const reader = new FileReader()\n          reader.onabort = () => { console.log('file reading was aborted'); reject(); }\n          reader.onerror = () => { console.log('file reading has failed');  reject(); }\n          reader.onload = async () => {\n            const binaryStr = reader.result;\n            const domparser = new DOMParser();\n            const kml = domparser.parseFromString(binaryStr, 'text/xml');\n            const geojson = togeojson.kml(kml);\n            console.log('kml = ', kml, ', geojson = ', geojson);\n            console.log('Extracting growers, farms, fields locally...');\n            resolve(geojson);\n          }\n          reader.readAsText(f);\n        }),\n  \n        // Fetch current state of all remote resources to match up names/id's\n        remote: this.fetchAllRemoteGFF(),\n      });\n \n      this.setState({ message: 'Comparing KML with what you have to decide if anything is new' });\n      console.log('Harmonizing local GFF with remote GFF, remote = ', remote);\n      const local = this.geoJSONToOADA({geojson, remote});\n  \n      console.log('Preparing to update remote, Final local gff = ', local);\n      const jobs = await this.constructJobList(local);\n      this.setState({\n        jobs, showapproval: true, message: false,\n      });\n      \n      console.log('Done!');\n    })\n\n  }\n\n  async doLogin() {\n    localStorage['oada.domain'] = this.state.domain;\n    const redirect = (process.env.NODE_ENV === 'production' ? udevcert.redirect_uris[2] : udevcert.redirect_uris[1]); // 2 is openatk.com, 1 is http://localhost:3000\n    console.log('redirect = ', redirect);\n    const token = await getAccessTokenAsync(this.state.domain.replace(/^https:\\/\\//,''), { \n      metadata: devcert, \n      scope: 'oada.fields:all',\n      redirect\n    }).then(r=>r.access_token);\n    localStorage['oada.token'] = token;\n    this.setState({\n      token,\n      showlogin: false,\n      showdropzone: true,\n    });\n  }\n\n  doLogout() {\n    localStorage['oada.token'] = false;\n    this.setState({ showlogin: true, showdropzone: false, showcomplete: false, showapproval: false, token: false });\n  }\n\n  domainChanged(evt) {\n    let domain = evt.target.value;\n    if (!domain.match(/^http/)) domain = 'https://'+domain;\n    this.setState({ domain });\n  }\n\n  render() {\n    const jobs = this.state.jobs || [];\n    const approvals = {\n      growers: _.filter(jobs, j => j.type === 'grower'),\n      farms: _.filter(jobs, j => j.type === 'farm'),\n      fields: _.filter(jobs, j => j.type === 'field'),\n    };\n    \n    return (\n      <div className=\"App\" style={{ fontFamily: 'arial' }}>\n        <Helmet>\n          <title>OpenATK Fields Importer - v{pkg.version}</title>\n        </Helmet>\n        <div style={{ backgroundColor: '#0066CC', color: '#FFFFFF', fontSize: '2em', padding: '5px', textAlign: 'left', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          <div>OpenAgToolkit Fields Importer</div>\n          <div style={{flexGrow: 1}}></div>\n          {this.state.showlogin ? '' : \n            <div onClick={() => this.doLogout()} style={{ fontSize: '0.7em', color: '#FFFFFF', textDecoration: 'underline' }}>\n              {this.state.token ? 'Logout' : 'Login'}\n            </div>\n          }\n        </div>\n\n\n        {this.state.message ? <div style={{color: '#00AA00', padding: '5px', margin: '5px' }}>{this.state.message}</div> : null }\n\n        {!this.state.showlogin ? '' : \n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div style={{ fontSize: '2em', padding: '20px' }}>Where should I sync fields to?</div>\n            <div style={{  }}><input style={{fontSize: '1.0em', width: '250px'}} type=\"text\" value={this.state.domain || ''} onChange={evt => this.domainChanged(evt)} /></div>\n            <div style={{ margin : '10px', borderRadius: '3px', border: '1px solid #CCCCCC', width: '250px', backgroundColor: '#3399FF', color: '#FFFFFF', fontSize: '2em', cursor: 'pointer'  }} onClick={() => this.doLogin()}>Connect</div>\n          </div>\n        }\n\n        {! this.state.showdropzone ? '' : \n          <div>\n            <p>Drop a KML from Ag Leader SMS here and it will ensure those growers, farms, and fields exist at your OADA cloud.</p>\n            <Dropzone onDrop={f => this.droppedFiles(f)}>\n              {({getRootProps, getInputProps}) => (\n                <section>\n                  <div style={{\n                       flex: 1, display: 'flex', \n                       justifyContent: 'center',\n                       alignItems: 'center',\n                       border: '3px dashed #BBBBBB', \n                       borderRadius: '10px',\n                       margin: '5px',\n                       padding: '5px',\n                       minHeight: '50vh',\n                    }} {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <p key='thep'>Drop KML files with your fields here.</p>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          </div>\n        }\n\n        {!this.state.showapproval ? null : \n          <div>\n            { approvals.growers.length < 1 && approvals.farms.length < 1 && approvals.fields.length < 1\n              ? <div style={{color: '#00BB00', padding: '5px', margin: '5px'}}>\n                  Your remote OADA cloud is up to date with the names in this KML file, nothing new to send!\n                </div>\n              : <div style={{ padding: '10px' }}>\n                  <div style={{ fontSize: '2em' }}>About to add the following items to your remote OADA cloud</div>\n                  <div onClick={() => {\n                      this.setState({ showapproval: false });\n                      this.putAllJobsToOADA(this.state.jobs);\n                    }} style={{ backgroundColor: '#3399FF', borderRadius: '3px', color: '#FFFFFF', fontSize: '1.5em', margin: '15px' }}>\n                    Click to Approve\n                  </div>\n                </div>\n            }\n            {_.map(['growers', 'farms', 'fields'], t => {\n              if (approvals[t].length < 1) return null;\n              return (\n                <div>\n                  <div  style={{ textAlign: 'left', padding: '5px', fontWeight: 'bold', fontSize: '1.5em' }}>{capitalizeFirstLetter(t)}:</div>\n                  <div style={{ display: 'flex', flexWrap: 'wrap', flexDirection: 'row' }}>\n                    {_.map(approvals[t], (f,i) => \n                      <div key={'approval'+t+i} style={{ padding: '5px', margin: '5px', borderRadius: '2px', border: '1px solid #EEEEEE' }}>\n                        {f.data.name}\n                      </div>)\n                    }\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        }\n\n        {!this.state.showcomplete ? null : \n          <div style={{color: 'green' }}>\n            Complete!\n          </div>\n        }\n\n        <div className='footer-bar' style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center', flexWrap: 'wrap', position: 'absolute', bottom: '0px', width: '99vw' }}>\n          <div className='footer-bar-element'>\n            <b>License:</b><br/>Apache 2.0\n          </div>\n          <div className='footer-bar-element'>\n            <a href=\"http://trellisframework.org\">\n              <img className='footer-logo' width='200px' src='logo-trellis.png'/>\n            </a>\n          </div>\n          <div className='footer-bar-element'>\n            <a href=\"http://oatscenter.org\">\n              <img className='footer-logo' width='200px' src='logo-oats.png'/>\n            </a>\n          </div>\n          <div className='footer-bar-element'>\n            <a href=\"http://oatscenter.org\">\n              <img className='footer-logo' width='200px' src='logo-purdue.png'/>\n            </a>\n          </div>\n          <div className='footer-bar-element'>\n            Many thanks to key sponsor <br/><a href='https://winfieldunited.com'>Winfield United</a>!\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}